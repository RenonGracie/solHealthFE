/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/clients_signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search clients */
        get: operations["clients_signup_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/clients_signup/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search clients */
        get: operations["clients_signupall_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/appointments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search for existing appointments */
        get: operations["appointments_get"];
        put?: never;
        /** Create a new appointment */
        post: operations["appointments_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/appointments/{appointment_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an existing appointment */
        get: operations["appointments__int_appointment_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/therapists/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get therapists table */
        get: operations["therapists_list_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/therapists/match": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Match client with therapists */
        get: operations["therapists_match_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/therapists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Match client with therapists */
        get: operations["therapists_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/therapists/calendar_events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get calendar events */
        get: operations["therapists_calendar_events_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/therapists/slots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get therapist's available slots by calendar email */
        get: operations["therapistsslots_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/therapists/availability": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get therapist's available slots by calendar email */
        post: operations["therapistsavailability_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/intakeq_forms/mandatory_form": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Send mandatory form and get its link */
        post: operations["intakeq_formsmandatory_form_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Webhook for typeform */
        post: operations["typeform_webhook_hook_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/intakeq_hook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Webhook for IntakeQ Appointments */
        post: operations["intakeq_hook_intakeq_hook_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/intakeq_invoice_hook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Webhook for IntakeQ Invoices */
        post: operations["intakeq_invoice_hook_intakeq_invoice_hook_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ClientSignup */
        ClientSignup: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Response Id */
            response_id?: string;
            /** First Name */
            first_name?: string;
            /** Last Name */
            last_name?: string;
            /** Email */
            email?: string;
            /** Phone */
            phone?: string;
            /** Gender */
            gender?: string;
            /** Age */
            age?: string;
            /** State */
            state?: string;
            /** Therapist Specializes In */
            therapist_specializes_in?: string[];
            /** Therapist Identifies As */
            therapist_identifies_as?: string;
            /** Alcohol */
            alcohol?: string;
            /** Drugs */
            drugs?: string;
            /** Pleasure Doing Things */
            pleasure_doing_things?: string;
            /** Feeling Down */
            feeling_down?: string;
            /** Trouble Falling */
            trouble_falling?: string;
            /** Feeling Tired */
            feeling_tired?: string;
            /** Poor Appetite */
            poor_appetite?: string;
            /** Feeling Bad About Yourself */
            feeling_bad_about_yourself?: string;
            /** Trouble Concentrating */
            trouble_concentrating?: string;
            /** Moving Or Speaking So Slowly */
            moving_or_speaking_so_slowly?: string;
            /** Suicidal Thoughts */
            suicidal_thoughts?: string;
            /** Feeling Nervous */
            feeling_nervous?: string;
            /** Not Control Worrying */
            not_control_worrying?: string;
            /** Worrying Too Much */
            worrying_too_much?: string;
            /** Trouble Relaxing */
            trouble_relaxing?: string;
            /** Being So Restless */
            being_so_restless?: string;
            /** Easily Annoyed */
            easily_annoyed?: string;
            /** Feeling Afraid */
            feeling_afraid?: string;
            /** University */
            university?: string;
            /** What Brings You */
            what_brings_you?: string;
            /** Lived Experiences */
            lived_experiences?: string[];
            /** Promo Code */
            promo_code?: string;
            /** Referred By */
            referred_by?: string;
            /** Therapist Name */
            therapist_name?: string;
            /** Utm */
            utm?: Record<string, never>;
        };
        /** Error */
        Error: {
            /** Error */
            error: string;
            /** Details */
            details?: Record<string, never>[];
        };
        /** Appointments */
        Appointments: {
            /** Appointments */
            appointments?: components["schemas"]["Appointment"][];
        };
        /** AdditionalClient */
        AdditionalClient: {
            /** Clientid */
            ClientId?: string;
            /** Clientname */
            ClientName?: string;
            /** Clientemail */
            ClientEmail?: string;
            /** Clientphone */
            ClientPhone?: string;
            /** Intakeid */
            IntakeId?: string;
        };
        /** CustomField */
        CustomField: {
            /** Fieldid */
            FieldId?: string;
            /** Value */
            Value?: string;
            /** Text */
            Text?: string;
        };
        /** Appointment */
        Appointment: {
            /** Enddatelocal */
            EndDateLocal?: string;
            /** Datecreated */
            DateCreated?: number;
            /** Locationname */
            LocationName?: string;
            /** Startdate */
            StartDate?: number;
            /** Lastmodified */
            LastModified?: number;
            /** Fullcancellationreason */
            FullCancellationReason?: string;
            /** Clientname */
            ClientName?: string;
            /** Enddateiso */
            EndDateIso?: string;
            /** Startdatelocalformatted */
            StartDateLocalFormatted?: string;
            /** Clientid */
            ClientId?: string;
            /** Startdateiso */
            StartDateIso: string;
            /** Practitionername */
            PractitionerName?: string;
            /** Remindertype */
            ReminderType?: string;
            /** Status */
            Status?: string;
            /** Createdby */
            CreatedBy?: string;
            /** Cancellationdate */
            CancellationDate?: string;
            /** Locationid */
            LocationId?: string;
            /** Duration */
            Duration?: number;
            /** Practitionerid */
            PractitionerId?: string;
            /** Clientemail */
            ClientEmail?: string;
            /** Enddate */
            EndDate?: number;
            /** Bookedbyclient */
            BookedByClient?: boolean;
            /** Additionalclients */
            AdditionalClients?: components["schemas"]["AdditionalClient"][];
            /** Customfields */
            CustomFields?: components["schemas"]["CustomField"][];
            /** Price */
            Price?: number;
            /** Attendanceconfirmationresponse */
            AttendanceConfirmationResponse?: string;
            /** Id */
            Id?: string;
            /** Practitioneremail */
            PractitionerEmail?: string;
            /** Startdatelocal */
            StartDateLocal?: string;
        };
        /** CreateAppointment */
        CreateAppointment: {
            /** Client Response Id */
            client_response_id: string;
            /** Therapist Email */
            therapist_email: string;
            /** Therapist Name */
            therapist_name: string;
            /** Datetime */
            datetime: string;
            /** Send Client Email Notification */
            send_client_email_notification: boolean;
            /** Reminder Type */
            reminder_type?: string;
            /** Status */
            status: string;
        };
        /** Therapists */
        Therapists: {
            /** Therapists */
            therapists: components["schemas"]["Therapist"][];
        };
        /** Therapist */
        Therapist: {
            /** Available Slots */
            available_slots?: string[];
            /** Id */
            id: string;
            /** Intern Name */
            intern_name?: string;
            /** Age */
            age?: string;
            /** Email */
            email?: string;
            /** Calendar Email */
            calendar_email?: string;
            /** Biography */
            biography?: string;
            /** Availability */
            availability?: string[];
            /** Birth Order */
            birth_order?: string;
            /** Caretaker Role */
            caretaker_role?: boolean;
            /** Caseload Tracker */
            caseload_tracker?: string;
            /** Has Children */
            has_children?: boolean;
            /** Cohort */
            cohort?: string;
            /** Diagnoses Specialities */
            diagnoses_specialities?: string[];
            /** Ethnicity */
            ethnicity?: string[];
            /** Gender */
            gender?: string;
            /** Identities As */
            identities_as?: string;
            /** Gender Interest */
            gender_interest?: string;
            /** Immigration Background */
            immigration_background?: string;
            /** Lgbtq Part */
            lgbtq_part?: boolean;
            /** Culture */
            culture?: string;
            /** Places */
            places?: string;
            /** Married */
            married?: boolean;
            /** Max Caseload */
            max_caseload?: string;
            /** Neurodivergence */
            neurodivergence?: string;
            /** Performing */
            performing?: boolean;
            /** Program */
            program?: string;
            /** Religion */
            religion?: string[];
            /** Experience With Risk Clients */
            experience_with_risk_clients?: string;
            /** Working With Lgbtq Clients */
            working_with_lgbtq_clients?: string;
            /** Negative Affect By Social Media */
            negative_affect_by_social_media?: boolean;
            /** States */
            states?: string[];
            /** Therapeutic Orientation */
            therapeutic_orientation?: string[];
            /** Family Household */
            family_household?: string;
            /** Welcome Video Link */
            welcome_video_link?: string;
            /** Greetings Video Link */
            greetings_video_link?: string;
            /** Image Link */
            image_link?: string;
            /** Accepting New Clients */
            accepting_new_clients?: boolean;
        };
        /** MatchedTherapists */
        MatchedTherapists: {
            client?: components["schemas"]["ClientShort"];
            /**
             * Therapists
             * @default []
             */
            therapists: components["schemas"]["ClientMatch"][];
        };
        /** ClientShort */
        ClientShort: {
            /**
             * Id
             * Format: uuid
             */
            id?: string;
            /** First Name */
            first_name?: string;
            /** Last Name */
            last_name?: string;
            /** Email */
            email?: string;
            /** Response Id */
            response_id?: string;
        };
        /** ClientMatch */
        ClientMatch: {
            therapist: components["schemas"]["Therapist"];
            /** Score */
            score: number;
            /** Matched Diagnoses Specialities */
            matched_diagnoses_specialities: string[];
        };
        /** CalendarEvents */
        CalendarEvents: {
            /** Data */
            data?: components["schemas"]["CalendarEventsDateGroup"][];
        };
        /** CalendarEvent */
        CalendarEvent: {
            /** Start */
            start?: string;
            /** End */
            end?: string;
            /** Event */
            event?: string;
            /** Zone */
            zone?: string;
            /** Description */
            description?: string;
            /** Recurrence */
            recurrence?: string[];
        };
        /** CalendarEventsDateGroup */
        CalendarEventsDateGroup: {
            /** Date */
            date: string;
            /** Events */
            events: components["schemas"]["CalendarEvent"][];
        };
        /** AvailableSlots */
        AvailableSlots: {
            /** Available Slots */
            available_slots?: string[];
        };
        /** Email */
        Email: {
            /** Email */
            email: string;
        };
        /** IntakeQMandatoryFormQuery */
        IntakeQMandatoryFormQuery: {
            /** Client Id */
            client_id: string;
            /** Therapist Id */
            therapist_id: string;
        };
        /** Url */
        Url: {
            /** Url */
            url: string;
        };
        /** SuccessResponse */
        SuccessResponse: {
            /** Success */
            success: boolean;
        };
        /** ValidationErrorModel */
        ValidationErrorModel: {
            /**
             * Location
             * @description the error's location as a list.
             */
            loc?: string[];
            /**
             * Message
             * @description a computer-readable identifier of the error type.
             */
            msg?: string;
            /**
             * Error Type
             * @description a human readable explanation of the error.
             */
            type_?: string;
            /**
             * Error context
             * @description an optional object which contains values required to render the error message.
             */
            ctx?: Record<string, never>;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    clients_signup_get: {
        parameters: {
            query: {
                response_id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClientSignup"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    clients_signupall_get: {
        parameters: {
            query: {
                email: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClientSignup"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    appointments_get: {
        parameters: {
            query?: {
                client?: number;
                startDate?: string;
                endDate?: string;
                status?: string;
                practitionerEmail?: string;
                page?: number;
                updatedSince?: string;
                deletedOnly?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Appointments"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    appointments_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateAppointment"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Appointment"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Gone */
            410: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    appointments__int_appointment_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                appointment_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Appointment"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    therapists_list_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Therapists"];
                };
            };
        };
    };
    therapists_match_get: {
        parameters: {
            query: {
                limit?: number;
                last_index?: number;
                /** @example Client response id */
                response_id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MatchedTherapists"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    therapists_get: {
        parameters: {
            query: {
                limit?: number;
                last_index?: number;
                /** @example Client response id */
                response_id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MatchedTherapists"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    therapists_calendar_events_get: {
        parameters: {
            query: {
                calendar_id: string;
                date_min?: string;
                date_max?: string;
                max_results?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CalendarEvents"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    therapistsslots_get: {
        parameters: {
            query: {
                email: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AvailableSlots"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    therapistsavailability_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Email"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AvailableSlots"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    intakeq_formsmandatory_form_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IntakeQMandatoryFormQuery"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Url"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationErrorModel"][];
                };
            };
        };
    };
    typeform_webhook_hook_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
        };
    };
    intakeq_hook_intakeq_hook_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    intakeq_invoice_hook_intakeq_invoice_hook_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
}
